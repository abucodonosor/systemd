--- systemd-208/src/shared/path-util.c.symlink~	2013-10-11 14:30:26.623116423 +0200
+++ systemd-208/src/shared/path-util.c	2013-10-11 14:29:41.462819526 +0200
@@ -29,6 +29,7 @@
 #include <fcntl.h>
 #include <dirent.h>
 #include <sys/statvfs.h>
+#include <libgen.h>
 
 #include "macro.h"
 #include "util.h"
@@ -417,13 +418,39 @@ int path_is_read_only_fs(const char *pat
 int path_is_os_tree(const char *path) {
         char *p;
         int r;
+	struct stat sb;
 
         /* We use /etc/os-release as flag file if something is an OS */
 
         p = strappenda(path, "/etc/os-release");
-        r = access(p, F_OK);
-
-        return r < 0 ? 0 : 1;
+	if (!lstat(p, &sb)) {
+		char linkname[PATH_MAX] = "";
+		int is_link = 1;
+		while(is_link >= 0 && S_ISLNK(sb.st_mode)) {
+			char *pp = NULL;
+			size_t len = readlink(*linkname ? linkname : p, linkname, sizeof(linkname));
+
+			linkname[len] = '\0';
+
+			if (*linkname && *linkname != '/'){
+				pp = strappenda(dirname(p), "/");
+				pp = strappenda(pp, linkname);
+				strcpy(linkname, pp);
+			}
+			else
+				pp = strappenda(path, linkname);
+
+			if(!lstat(pp, &sb) && (is_link = S_ISLNK(sb.st_mode)))
+				strcpy(p, pp);
+			else
+				is_link = -1;
+		}
+
+		r = access(*linkname ? linkname : p, F_OK);
+
+		return r < 0 ? 0 : 1;
+	}
+	return 0;
 }
 
 int find_binary(const char *name, char **filename) {
