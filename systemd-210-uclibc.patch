--- systemd-210/src/libsystemd/sd-bus/test-bus-memfd.c.omv~	2014-05-25 21:56:48.826001014 +0200
+++ systemd-210/src/libsystemd/sd-bus/test-bus-memfd.c	2014-05-25 21:57:15.808478392 +0200
@@ -151,6 +151,8 @@ int main(int argc, char *argv[]) {
         /* check content */
         assert_se(memcmp(buf, "ll", 2) == 0);
 
+#ifndef __UCLIBC__
+	/* uClibc doesn't support pwritev and preadv, skip this check */
         /* writev it out*/
         iov[0].iov_base = (char *)"ABC";
         iov[0].iov_len = 3;
@@ -168,6 +170,7 @@ int main(int argc, char *argv[]) {
         iov[2].iov_base = bufv[2];
         iov[2].iov_len = 3;
         assert_se(preadv(fd, iov, 3, 0) == 9);
+#endif
 
         /* check content */
         assert_se(memcmp(bufv[0], "ABC", 3) == 0);
--- systemd-210/src/nspawn/nspawn.c.omv~	2014-05-25 21:50:30.709324728 +0200
+++ systemd-210/src/nspawn/nspawn.c	2014-05-25 21:55:32.417480965 +0200
@@ -45,6 +45,17 @@
 #include <linux/veth.h>
 #include <sys/personality.h>
 
+#ifdef __UCLIBC__
+/* uClibc doesn't currently have eventfd_read and eventfd_write */
+int eventfd_read(int fd, eventfd_t *value) {
+	return read(fd, value, sizeof(eventfd_t)) != sizeof(eventfd_t) ? -1 : 0;
+}
+
+int eventfd_write(int fd, eventfd_t value) {
+	return write(fd, &value, sizeof(eventfd_t)) != sizeof(eventfd_t) ? -1 : 0;
+}
+#endif
+
 #ifdef HAVE_SELINUX
 #include <selinux/selinux.h>
 #endif
--- systemd-210/src/shared/missing.h.omv~	2014-05-25 22:00:40.074521978 +0200
+++ systemd-210/src/shared/missing.h	2014-05-25 22:02:35.166292773 +0200
@@ -29,6 +29,10 @@
 #include <stdlib.h>
 #include <unistd.h>
 #include <errno.h>
+#ifdef __UCLIBC__
+/* uClibc has its own sysinfo */
+#define _LINUX_SYSINFO_H 1
+#endif
 #include <linux/oom.h>
 #include <linux/input.h>
 #include <linux/if_link.h>
--- systemd-210/src/socket-proxy/socket-proxyd.c.omv~	2014-05-25 21:57:42.443962491 +0200
+++ systemd-210/src/socket-proxy/socket-proxyd.c	2014-05-25 21:58:55.751542602 +0200
@@ -44,6 +44,12 @@
 #define BUFFER_SIZE (256 * 1024)
 #define CONNECTIONS_MAX 256
 
+#ifndef F_SETPIPE_SZ
+/* The joys of uClibc... */
+#define F_SETPIPE_SZ 1031
+#define F_GETPIPE_SZ 1032
+#endif
+
 #define _cleanup_freeaddrinfo_ _cleanup_(freeaddrinfop)
 DEFINE_TRIVIAL_CLEANUP_FUNC(struct addrinfo *, freeaddrinfo);
 
