diff -up systemd-240/src/shared/json-internal.h.omv~ systemd-240/src/shared/json-internal.h
--- systemd-240/src/shared/json-internal.h.omv~	2018-12-22 15:21:17.922693574 +0100
+++ systemd-240/src/shared/json-internal.h	2018-12-22 15:23:05.427909679 +0100
@@ -40,7 +40,10 @@ assert_cc(sizeof(JsonValue) == 16U);
 /* This is only safe as long as we don't define more than 4K magic pointers, i.e. the page size of the simplest
  * architectures we support. That's because we rely on the fact that malloc() will never allocate from the first memory
  * page, as it is a faulting page for catching NULL pointer dereferences. */
-assert_cc((uintptr_t) _JSON_VARIANT_MAGIC_MAX < 4096U);
+/* The assert doesn't work with clang because of casts making it something other than a buildtime
+   static expression - so let's disable it for now
+   assert_cc((uintptr_t) _JSON_VARIANT_MAGIC_MAX < 4096U);
+ */
 
 enum { /* JSON tokens */
         JSON_TOKEN_END,
